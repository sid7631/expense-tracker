[{"/Users/sid/Dev/repos/my-diary/src/index.js":"1","/Users/sid/Dev/repos/my-diary/src/App.js":"2","/Users/sid/Dev/repos/my-diary/src/reportWebVitals.js":"3","/Users/sid/Dev/repos/my-diary/src/store/configStore.js":"4","/Users/sid/Dev/repos/my-diary/src/containers/dashboard/Dashboard.jsx":"5","/Users/sid/Dev/repos/my-diary/src/containers/home-page/sign-in/SignIn.jsx":"6","/Users/sid/Dev/repos/my-diary/src/containers/home-page/HomePage.jsx":"7","/Users/sid/Dev/repos/my-diary/src/containers/home-page/sign-up/SignUp.jsx":"8","/Users/sid/Dev/repos/my-diary/src/store/actions/index.js":"9","/Users/sid/Dev/repos/my-diary/src/store/reducers/index.js":"10","/Users/sid/Dev/repos/my-diary/src/helper/WithLoading.js":"11","/Users/sid/Dev/repos/my-diary/src/store/actions/auth.js":"12","/Users/sid/Dev/repos/my-diary/src/store/reducers/auth.js":"13","/Users/sid/Dev/repos/my-diary/src/store/actions/action-types.js":"14","/Users/sid/Dev/repos/my-diary/src/firebase.js":"15","/Users/sid/Dev/repos/my-diary/src/components/auth/AuthenticatedRoute.js":"16","/Users/sid/Dev/repos/my-diary/src/components/auth/UnauthenticatedRoute.js":"17","/Users/sid/Dev/repos/my-diary/src/components/utils/UtilWrapper.jsx":"18"},{"size":821,"mtime":1612533749832,"results":"19","hashOfConfig":"20"},{"size":1612,"mtime":1612552583854,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1611399763712,"results":"22","hashOfConfig":"20"},{"size":1050,"mtime":1611399763713,"results":"23","hashOfConfig":"20"},{"size":772,"mtime":1612535218561,"results":"24","hashOfConfig":"20"},{"size":3820,"mtime":1612539624766,"results":"25","hashOfConfig":"20"},{"size":1581,"mtime":1612604129511,"results":"26","hashOfConfig":"20"},{"size":4448,"mtime":1612540279177,"results":"27","hashOfConfig":"20"},{"size":99,"mtime":1612521427520,"results":"28","hashOfConfig":"20"},{"size":142,"mtime":1611399763713,"results":"29","hashOfConfig":"20"},{"size":275,"mtime":1611399763711,"results":"30","hashOfConfig":"20"},{"size":2775,"mtime":1612546731907,"results":"31","hashOfConfig":"20"},{"size":708,"mtime":1612544264896,"results":"32","hashOfConfig":"20"},{"size":156,"mtime":1611399763712,"results":"33","hashOfConfig":"20"},{"size":520,"mtime":1611460169764,"results":"34","hashOfConfig":"20"},{"size":738,"mtime":1612535235060,"results":"35","hashOfConfig":"20"},{"size":1112,"mtime":1612535129184,"results":"36","hashOfConfig":"20"},{"size":2106,"mtime":1612552616884,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"adens",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sid/Dev/repos/my-diary/src/index.js",[],["77","78"],"/Users/sid/Dev/repos/my-diary/src/App.js",["79"],"/Users/sid/Dev/repos/my-diary/src/reportWebVitals.js",[],"/Users/sid/Dev/repos/my-diary/src/store/configStore.js",[],"/Users/sid/Dev/repos/my-diary/src/containers/dashboard/Dashboard.jsx",[],"/Users/sid/Dev/repos/my-diary/src/containers/home-page/sign-in/SignIn.jsx",["80"],"import React, { useState } from 'react';\nimport {  Container } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { userSignIn } from '../../../store/actions';\n\nimport { FormControl, InputLabel, Input, FormHelperText, FormGroup, Button, Card, CardContent, Paper } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nfunction SignIn(props) {\n\n    const [email, setemail] = useState(null)\n    const [password, setpassword] = useState(null)\n\n    async function handleSubmit(event) {\n        event.preventDefault()\n        try{\n            await props.userSignIn(email, password)\n        } catch (error) {\n            console.log(error)\n        }    \n    }\n\n\n\n\n    return (\n        <Container className=\"d-flex align-items-center justify-content-center\"\n            style={{ minHeight: '100vh' }}>\n            <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n                <Paper>\n                    <CardContent>\n                        <h2 className=\"text-center mb-4\">Sign In</h2>\n                        <FormGroup>\n                            <FormControl>\n                                <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n                                <Input \n                                    id=\"my-input\" \n                                    aria-describedby=\"my-helper-text\"  \n                                    onChange={e => setemail(e.target.value)}\n                                    required />\n                                <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n                            </FormControl>\n                            <FormControl>\n                                <InputLabel htmlFor=\"my-input\">Password</InputLabel>\n                                <Input \n                                    type=\"password\" \n                                    id=\"my-input\" \n                                    aria-describedby=\"my-helper-text\" \n                                    onChange={e => setpassword(e.target.value)}\n                                    required />\n                                <FormHelperText id=\"my-helper-text\">Enter password of length 8.</FormHelperText>\n                            </FormControl>\n                            {/* <Form.Group id=\"email\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"email\" ref={emailRef} required></Form.Control>\n                            </Form.Group> */}\n                            {/* <Form.Group id=\"password\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" ref={passwordRef} required></Form.Control>\n                            </Form.Group> */}\n                            {/* <Form.Group id=\"password-confirm\">\n                                <Form.Label>Password Confirmation</Form.Label>\n                                <Form.Control type=\"password\" ref={passwordConfirmRef} required></Form.Control>\n                            </Form.Group> */}\n                            <Button variant=\"contained\" color=\"primary\" className=\"w-100 mt-2\" type=\"submit\" onClick={handleSubmit}>Sign In</Button>\n                        </FormGroup>\n                    </CardContent>\n                </Paper>\n                <div className=\"w-100 text-center mt-2\">\n                    Not a member? <Link to={'/sign-up'}>Sign Up</Link>\n                </div>\n            </div>\n        </Container>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        loading: state.auth.loading,\n    }\n}\n\nconst mapDispatchToProps = {\n    userSignIn\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","/Users/sid/Dev/repos/my-diary/src/containers/home-page/HomePage.jsx",["81","82"],"/Users/sid/Dev/repos/my-diary/src/containers/home-page/sign-up/SignUp.jsx",["83","84"],"import React, { useState } from 'react';\nimport {  Container } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { userSignUp } from '../../../store/actions';\n\nimport { FormControl, InputLabel, Input, FormHelperText, FormGroup, Button, Card, CardContent, Paper } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\n\nfunction SignUp(props) {\n\n    const [email, setemail] = useState(null)\n    const [password, setpassword] = useState(null)\n    const [confirmPassword, setconfirmPassword] = useState(null)\n\n    const history = useHistory()\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        props.userSignUp(email, password, true,function(){history.push('/')})\n    }\n\n\n\n\n    return (\n        <Container className=\"d-flex align-items-center justify-content-center\"\n            style={{ minHeight: '100vh' }}>\n            <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n                <Paper >\n                    <CardContent>\n                        <h2 className=\"text-center mb-4\">Sign Up</h2>\n                        <FormGroup>\n                            <FormControl>\n                                <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n                                <Input \n                                    id=\"my-input\" \n                                    aria-describedby=\"my-helper-text\"  \n                                    onChange={e => setemail(e.target.value)}\n                                    required />\n                                <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n                            </FormControl>\n                            <FormControl>\n                                <InputLabel htmlFor=\"my-input\">Password</InputLabel>\n                                <Input \n                                    type=\"password\" \n                                    id=\"my-input\" \n                                    aria-describedby=\"my-helper-text\" \n                                    onChange={e => setpassword(e.target.value)}\n                                    required />\n                                <FormHelperText id=\"my-helper-text\">Enter password of length 8.</FormHelperText>\n                            </FormControl>\n                            <FormControl>\n                                <InputLabel htmlFor=\"my-input\">Confirm Password</InputLabel>\n                                <Input \n                                    type=\"password\" \n                                    id=\"my-input\" \n                                    aria-describedby=\"my-helper-text\" \n                                    onChange={e => setconfirmPassword(e.target.value)}\n                                    required />\n                                <FormHelperText id=\"my-helper-text\">Confirm password</FormHelperText>\n                            </FormControl>\n                            {/* <Form.Group id=\"email\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"email\" ref={emailRef} required></Form.Control>\n                            </Form.Group> */}\n                            {/* <Form.Group id=\"password\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" ref={passwordRef} required></Form.Control>\n                            </Form.Group> */}\n                            {/* <Form.Group id=\"password-confirm\">\n                                <Form.Label>Password Confirmation</Form.Label>\n                                <Form.Control type=\"password\" ref={passwordConfirmRef} required></Form.Control>\n                            </Form.Group> */}\n                            <Button variant=\"contained\" color=\"primary\" className=\"w-100 mt-2\" type=\"submit\" onClick={handleSubmit}>Sign Up</Button>\n                        </FormGroup>\n                    </CardContent>\n                </Paper>\n                <div className=\"w-100 text-center mt-2\">\n                    Already have an account? <Link to={'/sign-in'}>Sign In</Link>\n                </div>\n            </div>\n        </Container>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.auth.loading,\n    }\n}\n\nconst mapDispatchToProps = {\n    userSignUp\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","/Users/sid/Dev/repos/my-diary/src/store/actions/index.js",[],"/Users/sid/Dev/repos/my-diary/src/store/reducers/index.js",[],"/Users/sid/Dev/repos/my-diary/src/helper/WithLoading.js",[],"/Users/sid/Dev/repos/my-diary/src/store/actions/auth.js",[],"/Users/sid/Dev/repos/my-diary/src/store/reducers/auth.js",[],"/Users/sid/Dev/repos/my-diary/src/store/actions/action-types.js",[],"/Users/sid/Dev/repos/my-diary/src/firebase.js",[],"/Users/sid/Dev/repos/my-diary/src/components/auth/AuthenticatedRoute.js",[],"/Users/sid/Dev/repos/my-diary/src/components/auth/UnauthenticatedRoute.js",[],"/Users/sid/Dev/repos/my-diary/src/components/utils/UtilWrapper.jsx",["85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":3,"column":20,"nodeType":"93","messageId":"94","endLine":3,"endColumn":25},{"ruleId":"91","severity":1,"message":"95","line":6,"column":77,"nodeType":"93","messageId":"94","endLine":6,"endColumn":81},{"ruleId":"91","severity":1,"message":"96","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":14},{"ruleId":"91","severity":1,"message":"97","line":5,"column":10,"nodeType":"93","messageId":"94","endLine":5,"endColumn":13},{"ruleId":"91","severity":1,"message":"95","line":6,"column":77,"nodeType":"93","messageId":"94","endLine":6,"endColumn":81},{"ruleId":"91","severity":1,"message":"98","line":13,"column":12,"nodeType":"93","messageId":"94","endLine":13,"endColumn":27},{"ruleId":"91","severity":1,"message":"99","line":16,"column":24,"nodeType":"93","messageId":"94","endLine":16,"endColumn":37},{"ruleId":"100","severity":1,"message":"101","line":55,"column":65,"nodeType":"102","endLine":55,"endColumn":123},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","'confirmPassword' is assigned a value but never used.","'settransition' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]